import{_ as t,c as n,o,ag as i}from"./chunks/framework.Bw-5EFTY.js";const p=JSON.parse('{"title":"Animation Control","description":"","frontmatter":{},"headers":[],"relativePath":"tags/animation.md","filePath":"tags/animation.md"}'),e={name:"tags/animation.md"};function r(l,a,s,m,c,d){return o(),n("div",null,a[0]||(a[0]=[i('<h1 id="animation-control" tabindex="-1">Animation Control <a class="header-anchor" href="#animation-control" aria-label="Permalink to &quot;Animation Control&quot;">​</a></h1><p>Start or stop an animation on the current scene. These actions target animations that have been linked to the current scene beforehand.</p><h2 id="start-animation" tabindex="-1">Start Animation <a class="header-anchor" href="#start-animation" aria-label="Permalink to &quot;Start Animation&quot;">​</a></h2><p><code>animation start %animation_name% [loop=true/false] [block]</code></p><ul><li><strong>%animation_name%</strong>: The name of the animation to start.</li><li><strong>loop=true/false</strong> <em>optional</em>: Whether the animation should loop.</li><li><strong>block</strong> <em>optional</em>: If provided, the story will wait until the animation finishes before continuing.</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Using the <code>block</code> keyword makes this a blocking command. It delays further script execution until the animation ends.</p></div><h2 id="stop-animation" tabindex="-1">Stop Animation <a class="header-anchor" href="#stop-animation" aria-label="Permalink to &quot;Stop Animation&quot;">​</a></h2><p><code>animation stop %animation_name%</code></p><ul><li>Stops the specified animation.</li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p><code>animation start angry_walk true block</code><br> → Starts the &quot;angry_walk&quot; animation, looping and blocking until it ends.</p>',11)]))}const u=t(e,[["render",r]]);export{p as __pageData,u as default};
