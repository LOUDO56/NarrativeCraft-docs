import{_ as a,c as s,o as t,ag as r}from"./chunks/framework.CjL8bjs4.js";const d=JSON.parse('{"title":"Screen Shake","description":"","frontmatter":{},"headers":[],"relativePath":"tags/shake.md","filePath":"tags/shake.md"}'),o={name:"tags/shake.md"};function n(i,e,h,c,l,m){return t(),s("div",null,e[0]||(e[0]=[r('<h1 id="screen-shake" tabindex="-1">Screen Shake <a class="header-anchor" href="#screen-shake" aria-label="Permalink to &quot;Screen Shake&quot;">​</a></h1><p>Shake the player’s screen to simulate effects like explosions or increase immersion.</p><p><code>shake %strength% %decay_rate% %speed%</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><p><strong>strength</strong>: The maximum offset of the screen shake. Higher values produce stronger shakes.<br><em>Type</em>: Integer or Float<br><em>Example</em>: <code>60</code> for a strong shake.</p></li><li><p><strong>decay_rate</strong>: How quickly the shake effect diminishes over time. Higher values make the shake stop faster.<br><em>Type</em>: Integer or Float<br><em>Example</em>: <code>5</code> means the shake fades quickly.</p></li><li><p><strong>speed</strong>: Frequency of the shaking noise or vibration. Higher values create faster shaking motions.<br><em>Type</em>: Float<br><em>Example</em>: <code>30</code> for fast shaking.</p></li></ul><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p><code>shake 60 5 30</code> → Shake rapidly and strongly, simulating an explosion with quick decay.</p><p><code>shake 4 0 0.1</code> Slow, smooth, infinite shake to create ambient immersion (no decay).</p><p><code>shake 0 0 0</code> Reset and stop any active shake effect.</p>',9)]))}const k=a(o,[["render",n]]);export{d as __pageData,k as default};
