import{_ as o,c as t,o as a,ag as r}from"./chunks/framework.CjL8bjs4.js";const m=JSON.parse('{"title":"Cooldown","description":"","frontmatter":{},"headers":[],"relativePath":"tags/cooldown.md","filePath":"tags/cooldown.md"}'),s={name:"tags/cooldown.md"};function n(i,e,l,c,d,h){return a(),t("div",null,e[0]||(e[0]=[r('<h1 id="cooldown" tabindex="-1">Cooldown <a class="header-anchor" href="#cooldown" aria-label="Permalink to &quot;Cooldown&quot;">​</a></h1><p>Pauses the story progression for a specified duration before continuing to the next tag or dialog.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This is a blocking command. The story will not proceed until the wait time has fully elapsed.</p></div><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><p><code>wait %time% &lt;second(s), minute(s), hour(s)&gt;</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>%time%</code> <em>(float)</em> — Length of the wait.</li><li><code>&lt;second(s), minute(s), hour(s)&gt;</code> <em>(string)</em> — Time unit for the wait duration.</li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p><code>wait 5 seconds</code><br> Pauses the story for 5 seconds before continuing.</p><p><code>wait 2.5 minutes</code><br> Pauses the story for 2.5 minutes before continuing.</p><p><code>wait 1 hour</code><br> Pauses the story for 1 hour before continuing.</p>',11)]))}const p=o(s,[["render",n]]);export{m as __pageData,p as default};
