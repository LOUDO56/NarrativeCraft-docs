import{_ as e,c as t,o,ag as n}from"./chunks/framework.CjL8bjs4.js";const g=JSON.parse('{"title":"Dialog (Non-Tag)","description":"","frontmatter":{},"headers":[],"relativePath":"tags/dialog.md","filePath":"tags/dialog.md"}'),i={name:"tags/dialog.md"};function r(l,a,s,c,d,h){return o(),t("div",null,a[0]||(a[0]=[n('<h1 id="dialog-non-tag" tabindex="-1">Dialog (Non-Tag) <a class="header-anchor" href="#dialog-non-tag" aria-label="Permalink to &quot;Dialog (Non-Tag)&quot;">​</a></h1><p>Dialog lines in NarrativeCraft are standard Ink lines but can trigger in-game speech when written in a specific format.</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><p><code>&lt;character_name&gt;: &lt;dialog&gt;</code></p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><p><code>Mark: Hello!</code></p><p>If <strong>no character</strong> is specified (e.g., <code>Hello!</code>), the dialog will be displayed in <strong>2D on the screen</strong>, not in the 3D world.</p><div class="danger custom-block"><p class="custom-block-title">Important</p><p>The character <strong>must be spawned in the world</strong> before speaking.<br> This means they need to be present through an animation, subscene, cutscene, or camera angle where the character is linked.<br> Otherwise, the story will crash and throw a runtime error.</p></div><h2 id="text-effects" tabindex="-1">Text Effects <a class="header-anchor" href="#text-effects" aria-label="Permalink to &quot;Text Effects&quot;">​</a></h2><p>You can apply animated text effects to dialog using inline tags.</p><h3 id="syntax-1" tabindex="-1">Syntax <a class="header-anchor" href="#syntax-1" aria-label="Permalink to &quot;Syntax&quot;">​</a></h3><p><code>[&lt;effect&gt; (param1=value1, param2=value2)]&lt;text&gt;[/&lt;effect&gt;]</code></p><p>Effects apply <strong>only</strong> to the enclosed text. All parameters are optional unless stated otherwise.</p><h3 id="available-effects" tabindex="-1">Available Effects <a class="header-anchor" href="#available-effects" aria-label="Permalink to &quot;Available Effects&quot;">​</a></h3><h4 id="waving" tabindex="-1"><code>waving</code> <a class="header-anchor" href="#waving" aria-label="Permalink to &quot;`waving`&quot;">​</a></h4><p>Applies a horizontal wave motion to the text.</p><p><code>[waving]Hellooo!![/waving]</code></p><h4 id="shaking" tabindex="-1"><code>shaking</code> <a class="header-anchor" href="#shaking" aria-label="Permalink to &quot;`shaking`&quot;">​</a></h4><p>Applies a chaotic shaking motion.</p><p><strong>Parameters:</strong></p><ul><li><code>time</code> <em>(float, optional)</em> , interval between shakes. Lower = faster movement.</li><li><code>force</code> <em>(float, optional)</em> , intensity of the shake.</li></ul><p><code>[shaking time=0.02, force=0.2]I&#39;m angry![/shaking]</code></p><h2 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p><code>Mark: [shaking force=0.1]What did you just say?[/shaking]</code></p>',24)]))}const f=e(i,[["render",r]]);export{g as __pageData,f as default};
