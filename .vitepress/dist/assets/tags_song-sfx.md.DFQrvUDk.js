import{_ as a,c as o,o as t,ag as s}from"./chunks/framework.CjL8bjs4.js";const f=JSON.parse('{"title":"Song/Sfx","description":"","frontmatter":{},"headers":[],"relativePath":"tags/song-sfx.md","filePath":"tags/song-sfx.md"}'),n={name:"tags/song-sfx.md"};function d(i,e,c,l,p,r){return t(),o("div",null,e[0]||(e[0]=[s('<h1 id="song-sfx" tabindex="-1">Song/Sfx <a class="header-anchor" href="#song-sfx" aria-label="Permalink to &quot;Song/Sfx&quot;">​</a></h1><p>Play sound from Minecraft. Sounds must be registered in Minecraft’s <code>sounds.json</code>.</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><p>Play song:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>song start %namespace:category.name% [%volume% %pitch% [loop=true/false] [fadein %fadeTime%]]</span></span></code></pre></div><p>Play sound effect:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sfx start %namespace:category.name% [%volume% %pitch% [loop=true/false] [fadein %fadeTime%]]</span></span></code></pre></div><p>Stop song:<br><code>song stop %namespace:category.name% [fadeout %fadeTime%]</code></p><p>Stop sound effect:<br><code>sfx stop %namespace:category.name% [fadeout %fadeTime%]</code></p><p>Stop all:<br><code>song stop all</code><br><code>sfx stop all</code><br><code>sound stop all</code></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If no namespace is provided, <code>minecraft</code> is used as the default.</p></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>%namespace:category.name%</code> <em>(string)</em>: Sound identifier with optional namespace. Defaults to <code>minecraft</code> if omitted.</li><li><code>%volume%</code> <em>(float, optional)</em>: Volume level (e.g., <code>0.5</code> for half volume).</li><li><code>%pitch%</code> <em>(float, optional)</em>: Pitch level (e.g., <code>1.2</code> for higher pitch).</li><li><code>loop</code> <em>(boolean, optional)</em>: Whether to loop the sound (<code>true</code> or <code>false</code>).</li><li><code>fadein %fadeTime%</code> <em>(float, optional)</em>: Fade-in duration in seconds when starting sound.</li><li><code>fadeout %fadeTime%</code> <em>(float, optional)</em>: Fade-out duration in seconds when stopping sound.</li></ul><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p><code>song start narrativecraft:music.intro 0.8 1 true fadein 2</code><br> Starts playing the intro music at 80% volume, normal pitch, looping with a 2-second fade-in.</p><p><code>sfx start sfx.page_turn 1 1</code><br> Plays the page turn sound effect at full volume and normal pitch.</p><p><code>song stop narrativecraft:music.intro fadeout 3</code><br> Stops the intro music, fading out over 3 seconds.</p><p><code>sfx stop sfx.page_turn</code><br> Immediately stops the page turn sound effect.</p><p><code>song stop all</code><br> Stops all currently playing songs.</p><p><code>sound stop all</code><br> Stops all songs and sound effects immediately.</p>',20)]))}const u=a(n,[["render",d]]);export{f as __pageData,u as default};
