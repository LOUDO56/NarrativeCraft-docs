import{_ as t,c as s,o,ag as a}from"./chunks/framework.CjL8bjs4.js";const b=JSON.parse('{"title":"Subscene Control","description":"","frontmatter":{},"headers":[],"relativePath":"tags/subscene.md","filePath":"tags/subscene.md"}'),n={name:"tags/subscene.md"};function r(c,e,l,i,u,p){return o(),s("div",null,e[0]||(e[0]=[a('<h1 id="subscene-control" tabindex="-1">Subscene Control <a class="header-anchor" href="#subscene-control" aria-label="Permalink to &quot;Subscene Control&quot;">​</a></h1><p>Start or stop a subscene linked to the current scene.</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><p>Start subscene:<br><code>subscene start %subscene_name% [loop=true/false] [block]</code></p><p>Stop subscene:<br><code>subscene stop %subscene_name%</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>%subscene_name%</code> <em>(string)</em>: Name of the subscene to start or stop.</li><li><code>loop=true/false</code> <em>(boolean, optional)</em>: Whether the subscene should loop when started.</li><li><code>block</code> <em>(keyword, optional)</em>: If present, pauses the story progression until the subscene finishes.</li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p><code>subscene start fight_intro loop=true block</code><br> Starts the subscene &quot;fight_intro&quot;, loops it continuously, and blocks story progression until it finishes.</p><p><code>subscene stop fight_intro</code><br> Instantly stops the subscene called &quot;fight_intro&quot;.</p>',10)]))}const h=t(n,[["render",r]]);export{b as __pageData,h as default};
